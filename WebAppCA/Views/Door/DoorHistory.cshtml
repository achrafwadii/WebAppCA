@model List<WebAppCA.Models.Pointage>
@{
    ViewData["Title"] = "Historique des Accès";
    var pointAcces = ViewBag.PointAcces as WebAppCA.Models.PointAcces;
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center my-4">
        <h2>Historique des Accès - @pointAcces?.Nom</h2>
        <a asp-controller="Door" asp-action="Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Retour à la liste
        </a>
    </div>

    <div class="card">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Détails du Point d'Accès</h5>
        </div>
        <div class="card-body">
            @if (pointAcces != null)
            {
                <div class="row">
                    <div class="col-md-6">
                        <p><strong>Identifiant:</strong> @pointAcces.DoorID</p>
                        <p><strong>Nom:</strong> @pointAcces.Nom</p>
                        <p><strong>Description:</strong> @(string.IsNullOrEmpty(pointAcces.Description) ? "-" : pointAcces.Description)</p>
                    </div>
                    <div class="col-md-6">
                        <p><strong>ID Équipement:</strong> @pointAcces.DeviceID</p>
                        <p><strong>Port du Relais:</strong> @pointAcces.RelayPort</p>
                        <p>
                            <strong>État Actuel:</strong>
                            @if (pointAcces.EstVerrouille)
                            {
                                <span class="badge bg-danger">Verrouillé</span>
                            }
                            else
                            {
                                <span class="badge bg-success">Déverrouillé</span>
                            }
                        </p>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-warning">
                    <i class="bi bi-exclamation-triangle"></i> Les informations du point d'accès ne sont pas disponibles.
                </div>
            }
        </div>
    </div>

    <div class="card mt-4">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Historique des Pointages</h5>
        </div>
        <div class="card-body">
            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Utilisateur</th>
                                <th>Heure d'entrée</th>
                                <th>Heure de sortie</th>
                                <th>Durée</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var pointage in Model)
                            {
                                <tr>
                                    <td>@pointage.Date.ToShortDateString()</td>
                                    <td>@pointage.Utilisateur?.Nom @pointage.Utilisateur?.Prenom</td>
                                    <td>@pointage.HeureEntree.ToShortTimeString()</td>
                                    <td>@(pointage.HeureSortie.HasValue ? pointage.HeureSortie.Value.ToShortTimeString() : "-")</td>
                                    <td>@(pointage.Duree.HasValue ? $"{pointage.Duree.Value.Hours}h {pointage.Duree.Value.Minutes}m" : "-")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="bi bi-info-circle"></i> Aucun pointage n'a été enregistré pour ce point d'accès.
                </div>
            }
        </div>
    </div>
</div>

@if (TempData["Message"] != null)
{
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header bg-success text-white">
                <strong class="me-auto">Notification</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @TempData["Message"]
            </div>
        </div>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header bg-danger text-white">
                <strong class="me-auto">Erreur</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @TempData["Error"]
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        // Auto-hide toasts after 5 seconds
        document.addEventListener('DOMContentLoaded', function() {
            var toasts = document.querySelectorAll('.toast');
            toasts.forEach(function(toast) {
                setTimeout(function() {
                    var bsToast = bootstrap.Toast.getInstance(toast);
                    if (bsToast) {
                        bsToast.hide();
                    }
                }, 5000);
            });
        });
    </script>
}