@model List<WebAppCA.Models.DoorInfoModel>
@{
    ViewData["Title"] = "Gestion des Portes ";
}

<div class="container">
    <h2 class="my-4">Gestion des Portes</h2>

    <div class="card mb-4">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Ajouter une Nouvelle Porte</h5>
        </div>
        <div class="card-body">
            <form asp-controller="Door" asp-action="AddDoor" method="post" class="row g-3">
                <div class="col-md-4">
                    <label for="doorName" class="form-label">Nom de la porte</label>
                    <input type="text" class="form-control" id="doorName" name="doorName" required maxlength="48">
                </div>
                <div class="col-md-4">
                    <label for="deviceID" class="form-label">Équipement</label>
                    <select class="form-select" id="deviceID" name="deviceID" required>
                        <option value="">Sélectionner un équipement</option>
                        @foreach (var device in ViewBag.Devices ?? new List<WebAppCA.Models.DeviceInfoModel>())
                        {
                            <option value="@device.DeviceID">@device.DeviceName (@device.IPAddress)</option>
                        }
                    </select>
                </div>
                <div class="col-md-4">
                    <label for="portNumber" class="form-label">Numéro de port</label>
                    <input type="number" class="form-control" id="portNumber" name="portNumber" min="0" max="255" required>
                </div>
                <div class="col-12 mt-3">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-plus-circle"></i> Ajouter
                    </button>
                </div>
            </form>
        </div>
    </div>

    <div class="card">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Liste des Portes</h5>
            <button id="refreshButton" class="btn btn-light btn-sm">
                <i class="bi bi-arrow-clockwise"></i> Rafraîchir
            </button>
        </div>
        <div class="card-body">
            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Nom</th>
                                <th>Équipement</th>
                                <th>Port</th>
                                <th>Statut</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var door in Model)
                            {
                                <tr>
                                    <td>@door.DoorID</td>
                                    <td>@door.Name</td>
                                    <td>@door.DeviceName</td>
                                    <td>@door.RelayPort</td>
                                    <td>
                                        @if (door.Status == "Déverrouillée")
                                        {
                                            <span class="badge bg-success">@door.Status</span>
                                        }
                                        else if (door.Status == "Verrouillée")
                                        {
                                            <span class="badge bg-danger">@door.Status</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">@door.Status</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <form asp-controller="Door" asp-action="ToggleDoor" method="post" class="me-2">
                                                <input type="hidden" name="doorID" value="@door.DoorID" />
                                                <button type="submit" class="btn btn-sm @(door.Status == "Déverrouillée" ? "btn-outline-danger" : "btn-outline-success")"
                                                        title="@(door.Status == "Déverrouillée" ? "Verrouiller" : "Déverrouiller")">
                                                    <i class="bi @(door.Status == "Déverrouillée" ? "bi-lock" : "bi-unlock")"></i>
                                                </button>
                                            </form>
                                            <form asp-controller="Door" asp-action="DeleteDoor" method="post">
                                                <input type="hidden" name="doorID" value="@door.DoorID" />
                                                <button type="submit" class="btn btn-sm btn-outline-danger"
                                                        onclick="return confirm('Êtes-vous sûr de vouloir supprimer cette porte?')"
                                                        title="Supprimer">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="bi bi-info-circle"></i> Aucune porte n'est configurée actuellement.
                </div>
            }
        </div>
    </div>
</div>

@if (TempData["Message"] != null)
{
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header bg-success text-white">
                <strong class="me-auto">Notification</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @TempData["Message"]
            </div>
        </div>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header bg-danger text-white">
                <strong class="me-auto">Erreur</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @TempData["Error"]
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        // Auto-hide toasts after 5 seconds
        document.addEventListener('DOMContentLoaded', function() {
            var toasts = document.querySelectorAll('.toast');
            toasts.forEach(function(toast) {
                setTimeout(function() {
                    var bsToast = bootstrap.Toast.getInstance(toast);
                    if (bsToast) {
                        bsToast.hide();
                    }
                }, 5000);
            });

            // Configurer le bouton de rafraîchissement
            document.getElementById('refreshButton').addEventListener('click', function() {
                window.location.reload();
            });
        });
    </script>
}